<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jabava.dao.hro.BdEmpBaseInfoMapper" >
  <resultMap id="BaseResultMap" type="com.jabava.pojo.hro.BdEmpBaseInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="base_info_id" property="baseInfoId" jdbcType="BIGINT" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="card_type" property="cardType" jdbcType="VARCHAR" />
    <result column="card_id" property="cardId" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="registered_address" property="registeredAddress" jdbcType="VARCHAR" />
    <result column="residence_zip" property="residenceZip" jdbcType="VARCHAR" />
    <result column="residence_address" property="residenceAddress" jdbcType="VARCHAR" />
    <result column="work_city" property="workCity" jdbcType="VARCHAR" />
    <result column="work_address" property="workAddress" jdbcType="INTEGER" />
    <result column="country_id" property="countryId" jdbcType="BIGINT" />
    <result column="nationality" property="nationality" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="marriage_status" property="marriageStatus" jdbcType="CHAR" />
    <result column="education_level" property="educationLevel" jdbcType="CHAR" />
    <result column="resident_type" property="residentType" jdbcType="CHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="create_dt" property="createDt" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="update_dt" property="updateDt" jdbcType="TIMESTAMP" />
    <result column="mimic_by" property="mimicBy" jdbcType="BIGINT" />
    <result column="proxy_by" property="proxyBy" jdbcType="BIGINT" />
    <result column="original_employee_id" property="originalEmployeeId" jdbcType="BIGINT" />
    <result column="family_insurance_address" property="familyInsuranceAddress" jdbcType="VARCHAR" />
    <result column="address_begin_date" property="addressBeginDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    base_info_id, employee_name, card_type, card_id, birthday, gender, mobile, phone, 
    registered_address, residence_zip, residence_address, work_city, work_address, country_id, 
    nationality, email, marriage_status, education_level, resident_type, is_deleted, 
    create_by, create_dt, update_by, update_dt, mimic_by, proxy_by, original_employee_id, 
    family_insurance_address, address_begin_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from bd_emp_base_info
    where base_info_id = #{baseInfoId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bd_emp_base_info
    where base_info_id = #{baseInfoId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jabava.pojo.hro.BdEmpBaseInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into bd_emp_base_info (base_info_id, employee_name, card_type, 
      card_id, birthday, gender, 
      mobile, phone, registered_address, 
      residence_zip, residence_address, work_city, 
      work_address, country_id, nationality, 
      email, marriage_status, education_level, 
      resident_type, is_deleted, create_by, 
      create_dt, update_by, update_dt, 
      mimic_by, proxy_by, original_employee_id, 
      family_insurance_address, address_begin_date
      )
    values (#{baseInfoId,jdbcType=BIGINT}, #{employeeName,jdbcType=VARCHAR}, #{cardType,jdbcType=VARCHAR}, 
      #{cardId,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{gender,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{registeredAddress,jdbcType=VARCHAR}, 
      #{residenceZip,jdbcType=VARCHAR}, #{residenceAddress,jdbcType=VARCHAR}, #{workCity,jdbcType=VARCHAR}, 
      #{workAddress,jdbcType=INTEGER}, #{countryId,jdbcType=BIGINT}, #{nationality,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{marriageStatus,jdbcType=CHAR}, #{educationLevel,jdbcType=CHAR}, 
      #{residentType,jdbcType=CHAR}, #{isDeleted,jdbcType=INTEGER}, #{createBy,jdbcType=BIGINT}, 
      #{createDt,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, #{updateDt,jdbcType=TIMESTAMP}, 
      #{mimicBy,jdbcType=BIGINT}, #{proxyBy,jdbcType=BIGINT}, #{originalEmployeeId,jdbcType=BIGINT}, 
      #{familyInsuranceAddress,jdbcType=VARCHAR}, #{addressBeginDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <!-- 批量新增更新 如果  base_info_id 没有就新增，如果有就更新 --> 
  <insert id="insertOrUpdateList" parameterType="list">
	  <![CDATA[
		INSERT INTO bd_emp_base_info
   	    (
   	      base_info_id, employee_name, card_type, 
	      card_id, birthday, gender, 
	      mobile, phone, registered_address, 
	      residence_zip, residence_address, work_city, 
	      work_address, country_id, nationality, 
	      email, marriage_status, education_level, 
	      resident_type, is_deleted, create_by, 
	      create_dt, update_by, update_dt, 
	      mimic_by, proxy_by, original_employee_id, 
	      family_insurance_address, address_begin_date
      ) 
   	    VALUES 
   	  ]]>
		<foreach collection="list" item="item"  index="index" separator=",">
	  (
		  #{item.baseInfoId,jdbcType=BIGINT}, #{item.employeeName,jdbcType=VARCHAR}, #{item.cardType,jdbcType=VARCHAR}, 
	      #{item.cardId,jdbcType=VARCHAR}, #{item.birthday,jdbcType=DATE}, #{item.gender,jdbcType=VARCHAR}, 
	      #{item.mobile,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, #{item.registeredAddress,jdbcType=VARCHAR}, 
	      #{item.residenceZip,jdbcType=VARCHAR}, #{item.residenceAddress,jdbcType=VARCHAR}, #{item.workCity,jdbcType=VARCHAR}, 
	      #{item.workAddress,jdbcType=INTEGER}, #{item.countryId,jdbcType=BIGINT}, #{item.nationality,jdbcType=CHAR}, 
	      #{item.email,jdbcType=VARCHAR}, #{item.marriageStatus,jdbcType=CHAR}, #{item.educationLevel,jdbcType=CHAR}, 
	      #{item.residentType,jdbcType=CHAR}, #{item.isDeleted,jdbcType=INTEGER}, #{item.createBy,jdbcType=BIGINT}, 
	      #{item.createDt,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=BIGINT}, #{item.updateDt,jdbcType=TIMESTAMP}, 
	      #{item.mimicBy,jdbcType=BIGINT}, #{item.proxyBy,jdbcType=BIGINT}, #{item.originalEmployeeId,jdbcType=BIGINT}, 
	      #{item.familyInsuranceAddress,jdbcType=VARCHAR}, #{item.addressBeginDate,jdbcType=TIMESTAMP}
      
      )
		</foreach>		
		ON DUPLICATE KEY UPDATE		
		base_info_id=values(base_info_id),
		employee_name= values(employee_name),
		card_type= values(card_type),
		
		card_id=values(card_id),
		birthday= values(birthday),
		gender=values(gender),
		
		mobile= values(mobile),
		phone=values(phone),		
		registered_address= values(registered_address),
		residence_zip=values(residence_zip),
		residence_address= values(residence_address),
		work_city=values(work_city),
		work_address= values(work_address),	
		
		country_id= values(country_id),
		nationality=values(nationality),		
		email= values(email),
		marriage_status=values(marriage_status),
		education_level= values(education_level),
		resident_type=values(resident_type),
		is_deleted=values(is_deleted),	
		
		create_by= values(create_by),
		is_deleted=values(is_deleted),		
		create_dt= values(create_dt),
		update_by=values(update_by),
		update_dt= values(update_dt),
		mimic_by=values(mimic_by),
		
		proxy_by= values(proxy_by),
		original_employee_id=values(original_employee_id),		
		family_insurance_address= values(family_insurance_address),
		address_begin_date=values(address_begin_date)		
	</insert> 
  <insert id="insertSelective" parameterType="com.jabava.pojo.hro.BdEmpBaseInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into bd_emp_base_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="baseInfoId != null" >
        base_info_id,
      </if>
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="cardType != null" >
        card_type,
      </if>
      <if test="cardId != null" >
        card_id,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="registeredAddress != null" >
        registered_address,
      </if>
      <if test="residenceZip != null" >
        residence_zip,
      </if>
      <if test="residenceAddress != null" >
        residence_address,
      </if>
      <if test="workCity != null" >
        work_city,
      </if>
      <if test="workAddress != null" >
        work_address,
      </if>
      <if test="countryId != null" >
        country_id,
      </if>
      <if test="nationality != null" >
        nationality,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="marriageStatus != null" >
        marriage_status,
      </if>
      <if test="educationLevel != null" >
        education_level,
      </if>
      <if test="residentType != null" >
        resident_type,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDt != null" >
        create_dt,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDt != null" >
        update_dt,
      </if>
      <if test="mimicBy != null" >
        mimic_by,
      </if>
      <if test="proxyBy != null" >
        proxy_by,
      </if>
      <if test="originalEmployeeId != null" >
        original_employee_id,
      </if>
      <if test="familyInsuranceAddress != null" >
        family_insurance_address,
      </if>
      <if test="addressBeginDate != null" >
        address_begin_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="baseInfoId != null" >
        #{baseInfoId,jdbcType=BIGINT},
      </if>
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null" >
        #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null" >
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="registeredAddress != null" >
        #{registeredAddress,jdbcType=VARCHAR},
      </if>
      <if test="residenceZip != null" >
        #{residenceZip,jdbcType=VARCHAR},
      </if>
      <if test="residenceAddress != null" >
        #{residenceAddress,jdbcType=VARCHAR},
      </if>
      <if test="workCity != null" >
        #{workCity,jdbcType=VARCHAR},
      </if>
      <if test="workAddress != null" >
        #{workAddress,jdbcType=INTEGER},
      </if>
      <if test="countryId != null" >
        #{countryId,jdbcType=BIGINT},
      </if>
      <if test="nationality != null" >
        #{nationality,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="marriageStatus != null" >
        #{marriageStatus,jdbcType=CHAR},
      </if>
      <if test="educationLevel != null" >
        #{educationLevel,jdbcType=CHAR},
      </if>
      <if test="residentType != null" >
        #{residentType,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createDt != null" >
        #{createDt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateDt != null" >
        #{updateDt,jdbcType=TIMESTAMP},
      </if>
      <if test="mimicBy != null" >
        #{mimicBy,jdbcType=BIGINT},
      </if>
      <if test="proxyBy != null" >
        #{proxyBy,jdbcType=BIGINT},
      </if>
      <if test="originalEmployeeId != null" >
        #{originalEmployeeId,jdbcType=BIGINT},
      </if>
      <if test="familyInsuranceAddress != null" >
        #{familyInsuranceAddress,jdbcType=VARCHAR},
      </if>
      <if test="addressBeginDate != null" >
        #{addressBeginDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jabava.pojo.hro.BdEmpBaseInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bd_emp_base_info
    <set >
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null" >
        card_type = #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null" >
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="registeredAddress != null" >
        registered_address = #{registeredAddress,jdbcType=VARCHAR},
      </if>
      <if test="residenceZip != null" >
        residence_zip = #{residenceZip,jdbcType=VARCHAR},
      </if>
      <if test="residenceAddress != null" >
        residence_address = #{residenceAddress,jdbcType=VARCHAR},
      </if>
      <if test="workCity != null" >
        work_city = #{workCity,jdbcType=VARCHAR},
      </if>
      <if test="workAddress != null" >
        work_address = #{workAddress,jdbcType=INTEGER},
      </if>
      <if test="countryId != null" >
        country_id = #{countryId,jdbcType=BIGINT},
      </if>
      <if test="nationality != null" >
        nationality = #{nationality,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="marriageStatus != null" >
        marriage_status = #{marriageStatus,jdbcType=CHAR},
      </if>
      <if test="educationLevel != null" >
        education_level = #{educationLevel,jdbcType=CHAR},
      </if>
      <if test="residentType != null" >
        resident_type = #{residentType,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createDt != null" >
        create_dt = #{createDt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateDt != null" >
        update_dt = #{updateDt,jdbcType=TIMESTAMP},
      </if>
      <if test="mimicBy != null" >
        mimic_by = #{mimicBy,jdbcType=BIGINT},
      </if>
      <if test="proxyBy != null" >
        proxy_by = #{proxyBy,jdbcType=BIGINT},
      </if>
      <if test="originalEmployeeId != null" >
        original_employee_id = #{originalEmployeeId,jdbcType=BIGINT},
      </if>
      <if test="familyInsuranceAddress != null" >
        family_insurance_address = #{familyInsuranceAddress,jdbcType=VARCHAR},
      </if>
      <if test="addressBeginDate != null" >
        address_begin_date = #{addressBeginDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where base_info_id = #{baseInfoId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jabava.pojo.hro.BdEmpBaseInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bd_emp_base_info
    set employee_name = #{employeeName,jdbcType=VARCHAR},
      card_type = #{cardType,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      gender = #{gender,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      registered_address = #{registeredAddress,jdbcType=VARCHAR},
      residence_zip = #{residenceZip,jdbcType=VARCHAR},
      residence_address = #{residenceAddress,jdbcType=VARCHAR},
      work_city = #{workCity,jdbcType=VARCHAR},
      work_address = #{workAddress,jdbcType=INTEGER},
      country_id = #{countryId,jdbcType=BIGINT},
      nationality = #{nationality,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      marriage_status = #{marriageStatus,jdbcType=CHAR},
      education_level = #{educationLevel,jdbcType=CHAR},
      resident_type = #{residentType,jdbcType=CHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=BIGINT},
      create_dt = #{createDt,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_dt = #{updateDt,jdbcType=TIMESTAMP},
      mimic_by = #{mimicBy,jdbcType=BIGINT},
      proxy_by = #{proxyBy,jdbcType=BIGINT},
      original_employee_id = #{originalEmployeeId,jdbcType=BIGINT},
      family_insurance_address = #{familyInsuranceAddress,jdbcType=VARCHAR},
      address_begin_date = #{addressBeginDate,jdbcType=TIMESTAMP}
    where base_info_id = #{baseInfoId,jdbcType=BIGINT}
  </update>
</mapper>