<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jabava.dao.manage.EhrPersonMapper" >
  <resultMap id="BaseResultMap" type="com.jabava.pojo.manage.EhrPerson" >
    <!--
      WARNING - @mbggenerated 
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 22 13:34:15 CST 2015.
    -->
    <id column="person_id" property="personId" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="organization_id" property="organizationId" jdbcType="BIGINT" />
    <result column="post_id" property="postId" jdbcType="BIGINT" />
    <result column="cost_id" property="costId" jdbcType="BIGINT" />
    <result column="job_number" property="jobNumber" jdbcType="VARCHAR" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="employee_photo" property="employeePhoto" jdbcType="VARCHAR" />
    <result column="employment_type" property="employmentType" jdbcType="VARCHAR" />
    <result column="rank_id" property="rankId" jdbcType="BIGINT" />
    <result column="key_person" property="keyPerson" jdbcType="TINYINT" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="report_object" property="reportObject" jdbcType="VARCHAR" />
    <result column="entry_date" property="entryDate" jdbcType="DATE" />
    <result column="positive_date" property="positiveDate" jdbcType="DATE" />
    <result column="in_company_time" property="inCompanyTime" jdbcType="TINYINT" />
    <result column="firstjob_date" property="firstjobDate" jdbcType="DATE" />
    <result column="birth_date" property="birthDate" jdbcType="DATE" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="cert_type" property="certType" jdbcType="TINYINT" />
    <result column="cert_id" property="certId" jdbcType="VARCHAR" /> 
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="salary_card" property="salaryCard" jdbcType="VARCHAR" />
    <result column="marital" property="marital" jdbcType="TINYINT" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="study_abroad" property="studyAbroad" jdbcType="TINYINT" />
    <result column="work_location" property="workLocation" jdbcType="VARCHAR" />
    <result column="payroll_location" property="payrollLocation" jdbcType="VARCHAR" />
    <result column="register_location" property="registerLocation" jdbcType="VARCHAR" />
    <result column="social_security_location" property="socialSecurityLocation" jdbcType="VARCHAR" />
    <result column="register_type" property="registerType" jdbcType="TINYINT" />
    <result column="birth_place" property="birthPlace" jdbcType="VARCHAR" />
    <result column="nationality" property="nationality" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="Email" property="email" jdbcType="VARCHAR" />
    <result column="contact_address" property="contactAddress" jdbcType="VARCHAR" />
    <result column="family_address" property="familyAddress" jdbcType="VARCHAR" />
    <result column="post_code" property="postCode" jdbcType="VARCHAR" />
    <result column="is_payroll_flag" property="isPayrollFlag" jdbcType="TINYINT" />
    <result column="file_location" property="fileLocation" jdbcType="VARCHAR" />
    <result column="is_foreign" property="isForeign" jdbcType="TINYINT" />
    <result column="left_date" property="leftDate" jdbcType="DATE" />
    <result column="left_cause" property="leftCause" jdbcType="VARCHAR" />
    <result column="expire_date" property="expireDate" jdbcType="DATE" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="last_modify_user_id" property="lastModifyUserId" jdbcType="BIGINT" />
    <result column="last_modify_user_name" property="lastModifyUserName" jdbcType="VARCHAR" />
    <result column="last_modify_date" property="lastModifyDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="employee_group" property="employeeGroup" jdbcType="VARCHAR" />
    <result column="team" property="team" jdbcType="BIGINT" />
    <result column="is_workplace" property="isWorkplace" jdbcType="TINYINT" />
    <result column="resume" property="resume" jdbcType="VARCHAR" />
    <result column="subbank" property="subbank" jdbcType="VARCHAR" />
    <result column="recruit" property="recruit" jdbcType="VARCHAR" />
    <result column="post" property="post" jdbcType="VARCHAR" />
    <result column="org" property="org" jdbcType="VARCHAR" />
    <result column="positiveDate1" property="positiveDate1" jdbcType="VARCHAR" />
    <result column="birthDate1" property="birthDate1" jdbcType="VARCHAR" />
    <result column="origin_place" property="originPlace" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="cert_type_url" property="certTypeUrl" jdbcType="VARCHAR" />
    <result column="resume_url" property="resumeUrl" jdbcType="VARCHAR" />
    <result column="education_url" property="educationUrl" jdbcType="VARCHAR" />
    <result column="residence_url" property="residenceUrl" jdbcType="VARCHAR" />
    <result column="jobpost_url" property="jobpostUrl" jdbcType="VARCHAR" />
    <result column="health_url" property="healthUrl" jdbcType="VARCHAR" />
    <result column="salary_url" property="salaryUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 22 13:34:15 CST 2015.
    -->
    person_id, company_id, organization_id, post_id, cost_id, job_number, employee_name, 
    employee_photo, employment_type, rank_id, key_person, sex, report_object, entry_date, 
    positive_date, in_company_time, firstjob_date, birth_date, age, cert_type, cert_id, 
    bank_name, salary_card, marital, degree, education, study_abroad, work_location, 
    payroll_location, register_location, social_security_location, register_type, birth_place, 
    nationality, mobile, phone, Email, contact_address, family_address, post_code, is_payroll_flag, 
    file_location, is_foreign, left_date, left_cause, expire_date, memo, create_user_id, 
    create_user_name, create_date, last_modify_user_id, last_modify_user_name, last_modify_date, 
    status, employee_group, team, is_workplace, resume, subbank, recruit, origin_place, is_deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 22 13:34:15 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from ehr_person
    where person_id = #{personId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 22 13:34:15 CST 2015.
    -->
    delete from ehr_person
    where person_id = #{personId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jabava.pojo.manage.EhrPerson" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 22 13:34:15 CST 2015.
    -->
    insert into ehr_person (person_id, company_id, organization_id, 
      post_id, cost_id, job_number, 
      employee_name, employee_photo, employment_type, 
      rank_id, key_person, sex, 
      report_object, entry_date, positive_date, 
      in_company_time, firstjob_date, birth_date, 
      age, cert_type, cert_id, 
      bank_name, salary_card, marital, 
      degree, education, study_abroad, 
      work_location, payroll_location, register_location, 
      social_security_location, register_type, birth_place, 
      nationality, mobile, phone, 
      Email, contact_address, family_address, 
      post_code, is_payroll_flag, file_location, 
      is_foreign, left_date, left_cause, 
      expire_date, memo, create_user_id, 
      create_user_name, create_date, last_modify_user_id, 
      last_modify_user_name, last_modify_date, status, 
      employee_group, team, is_workplace, 
      resume, subbank, recruit
      )
    values (#{personId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{organizationId,jdbcType=BIGINT}, 
      #{postId,jdbcType=BIGINT}, #{costId,jdbcType=BIGINT}, #{jobNumber,jdbcType=VARCHAR}, 
      #{employeeName,jdbcType=VARCHAR}, #{employeePhoto,jdbcType=VARCHAR}, #{employmentType,jdbcType=VARCHAR}, 
      #{rankId,jdbcType=BIGINT}, #{keyPerson,jdbcType=TINYINT}, #{sex,jdbcType=TINYINT}, 
      #{reportObject,jdbcType=VARCHAR}, #{entryDate,jdbcType=DATE}, #{positiveDate,jdbcType=DATE}, 
      #{inCompanyTime,jdbcType=TINYINT}, #{firstjobDate,jdbcType=DATE}, #{birthDate,jdbcType=DATE}, 
      #{age,jdbcType=INTEGER}, #{certType,jdbcType=TINYINT}, #{certId,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{salaryCard,jdbcType=VARCHAR}, #{marital,jdbcType=TINYINT}, 
      #{degree,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{studyAbroad,jdbcType=TINYINT}, 
      #{workLocation,jdbcType=VARCHAR}, #{payrollLocation,jdbcType=VARCHAR}, #{registerLocation,jdbcType=VARCHAR}, 
      #{socialSecurityLocation,jdbcType=VARCHAR}, #{registerType,jdbcType=TINYINT}, #{birthPlace,jdbcType=VARCHAR}, 
      #{nationality,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{contactAddress,jdbcType=VARCHAR}, #{familyAddress,jdbcType=VARCHAR}, 
      #{postCode,jdbcType=VARCHAR}, #{isPayrollFlag,jdbcType=TINYINT}, #{fileLocation,jdbcType=VARCHAR}, 
      #{isForeign,jdbcType=TINYINT}, #{leftDate,jdbcType=DATE}, #{leftCause,jdbcType=VARCHAR}, 
      #{expireDate,jdbcType=DATE}, #{memo,jdbcType=VARCHAR}, #{createUserId,jdbcType=BIGINT}, 
      #{createUserName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{lastModifyUserId,jdbcType=BIGINT}, 
      #{lastModifyUserName,jdbcType=VARCHAR}, #{lastModifyDate,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{employeeGroup,jdbcType=VARCHAR}, #{team,jdbcType=BIGINT}, #{isWorkplace,jdbcType=TINYINT}, 
      #{resume,jdbcType=VARCHAR}, #{subbank,jdbcType=VARCHAR}, #{recruit,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jabava.pojo.manage.EhrPerson" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 22 13:34:15 CST 2015.
    -->
    insert into ehr_person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="personId != null" >
        person_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="organizationId != null" >
        organization_id,
      </if>
      <if test="postId != null" >
        post_id,
      </if>
      <if test="costId != null" >
        cost_id,
      </if>
      <if test="jobNumber != null" >
        job_number,
      </if>
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="employeePhoto != null" >
        employee_photo,
      </if>
      <if test="employmentType != null" >
        employment_type,
      </if>
      <if test="rankId != null" >
        rank_id,
      </if>
      <if test="keyPerson != null" >
        key_person,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="reportObject != null" >
        report_object,
      </if>
      <if test="entryDate != null" >
        entry_date,
      </if>
      <if test="positiveDate != null" >
        positive_date,
      </if>
      <if test="inCompanyTime != null" >
        in_company_time,
      </if>
      <if test="firstjobDate != null" >
        firstjob_date,
      </if>
      <if test="birthDate != null" >
        birth_date,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="certType != null" >
        cert_type,
      </if>
      <if test="certId != null" >
        cert_id,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="salaryCard != null" >
        salary_card,
      </if>
      <if test="marital != null" >
        marital,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="studyAbroad != null" >
        study_abroad,
      </if>
      <if test="workLocation != null" >
        work_location,
      </if>
      <if test="payrollLocation != null" >
        payroll_location,
      </if>
      <if test="registerLocation != null" >
        register_location,
      </if>
      <if test="socialSecurityLocation != null" >
        social_security_location,
      </if>
      <if test="registerType != null" >
        register_type,
      </if>
      <if test="birthPlace != null" >
        birth_place,
      </if>
      <if test="nationality != null" >
        nationality,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        Email,
      </if>
      <if test="contactAddress != null" >
        contact_address,
      </if>
      <if test="familyAddress != null" >
        family_address,
      </if>
      <if test="postCode != null" >
        post_code,
      </if>
      <if test="isPayrollFlag != null" >
        is_payroll_flag,
      </if>
      <if test="fileLocation != null" >
        file_location,
      </if>
      <if test="isForeign != null" >
        is_foreign,
      </if>
      <if test="leftDate != null" >
        left_date,
      </if>
      <if test="leftCause != null" >
        left_cause,
      </if>
      <if test="expireDate != null" >
        expire_date,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="lastModifyUserId != null" >
        last_modify_user_id,
      </if>
      <if test="lastModifyUserName != null" >
        last_modify_user_name,
      </if>
      <if test="lastModifyDate != null" >
        last_modify_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="employeeGroup != null" >
        employee_group,
      </if>
      <if test="team != null" >
        team,
      </if>
      <if test="isWorkplace != null" >
        is_workplace,
      </if>
      <if test="resume != null" >
        resume,
      </if>
      <if test="subbank != null" >
        subbank,
      </if>
      <if test="recruit != null" >
        recruit,
      </if>
      <if test="originPlace != null">
		origin_place,
	  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="personId != null" >
        #{personId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="organizationId != null" >
        #{organizationId,jdbcType=BIGINT},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=BIGINT},
      </if>
      <if test="costId != null" >
        #{costId,jdbcType=BIGINT},
      </if>
      <if test="jobNumber != null" >
        #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeePhoto != null" >
        #{employeePhoto,jdbcType=VARCHAR},
      </if>
      <if test="employmentType != null" >
        #{employmentType,jdbcType=VARCHAR},
      </if>
      <if test="rankId != null" >
        #{rankId,jdbcType=BIGINT},
      </if>
      <if test="keyPerson != null" >
        #{keyPerson,jdbcType=TINYINT},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="reportObject != null" >
        #{reportObject,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null" >
        #{entryDate,jdbcType=DATE},
      </if>
      <if test="positiveDate != null" >
        #{positiveDate,jdbcType=DATE},
      </if>
      <if test="inCompanyTime != null" >
        #{inCompanyTime,jdbcType=TINYINT},
      </if>
      <if test="firstjobDate != null" >
        #{firstjobDate,jdbcType=DATE},
      </if>
      <if test="birthDate != null" >
        #{birthDate,jdbcType=DATE},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="certType != null" >
        #{certType,jdbcType=TINYINT},
      </if>
      <if test="certId != null" >
        #{certId,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="salaryCard != null" >
        #{salaryCard,jdbcType=VARCHAR},
      </if>
      <if test="marital != null" >
        #{marital,jdbcType=TINYINT},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="studyAbroad != null" >
        #{studyAbroad,jdbcType=TINYINT},
      </if>
      <if test="workLocation != null" >
        #{workLocation,jdbcType=VARCHAR},
      </if>
      <if test="payrollLocation != null" >
        #{payrollLocation,jdbcType=VARCHAR},
      </if>
      <if test="registerLocation != null" >
        #{registerLocation,jdbcType=VARCHAR},
      </if>
      <if test="socialSecurityLocation != null" >
        #{socialSecurityLocation,jdbcType=VARCHAR},
      </if>
      <if test="registerType != null" >
        #{registerType,jdbcType=TINYINT},
      </if>
      <if test="birthPlace != null" >
        #{birthPlace,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null" >
        #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="contactAddress != null" >
        #{contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="familyAddress != null" >
        #{familyAddress,jdbcType=VARCHAR},
      </if>
      <if test="postCode != null" >
        #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="isPayrollFlag != null" >
        #{isPayrollFlag,jdbcType=TINYINT},
      </if>
      <if test="fileLocation != null" >
        #{fileLocation,jdbcType=VARCHAR},
      </if>
      <if test="isForeign != null" >
        #{isForeign,jdbcType=TINYINT},
      </if>
      <if test="leftDate != null" >
        #{leftDate,jdbcType=DATE},
      </if>
      <if test="leftCause != null" >
        #{leftCause,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        #{expireDate,jdbcType=DATE},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyUserId != null" >
        #{lastModifyUserId,jdbcType=BIGINT},
      </if>
      <if test="lastModifyUserName != null" >
        #{lastModifyUserName,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyDate != null" >
        #{lastModifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="employeeGroup != null" >
        #{employeeGroup,jdbcType=VARCHAR},
      </if>
      <if test="team != null" >
        #{team,jdbcType=BIGINT},
      </if>
      <if test="isWorkplace != null" >
        #{isWorkplace,jdbcType=TINYINT},
      </if>
      <if test="resume != null" >
        #{resume,jdbcType=VARCHAR},
      </if>
      <if test="subbank != null" >
        #{subbank,jdbcType=VARCHAR},
      </if>
      <if test="recruit != null" >
        #{recruit,jdbcType=VARCHAR},
      </if>
      <if test="originPlace != null">
		#{originPlace,jdbcType=VARCHAR},
	  </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="personId">  
    	SELECT LAST_INSERT_ID() AS ID  
    </selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jabava.pojo.manage.EhrPerson" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 22 13:34:15 CST 2015.
    -->
    update ehr_person
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="organizationId != null" >
        organization_id = #{organizationId,jdbcType=BIGINT},
      </if>
      <if test="postId != null" >
        post_id = #{postId,jdbcType=BIGINT},
      </if>
      <if test="costId != null" >
        cost_id = #{costId,jdbcType=BIGINT},
      </if>
      <if test="jobNumber != null" >
        job_number = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeePhoto != null" >
        employee_photo = #{employeePhoto,jdbcType=VARCHAR},
      </if>
      <if test="employmentType != null" >
        employment_type = #{employmentType,jdbcType=VARCHAR},
      </if>
      <if test="rankId != null" >
        rank_id = #{rankId,jdbcType=BIGINT},
      </if>
      <if test="keyPerson != null" >
        key_person = #{keyPerson,jdbcType=TINYINT},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="reportObject != null" >
        report_object = #{reportObject,jdbcType=VARCHAR},
      </if>
      <if test="entryDate != null" >
        entry_date = #{entryDate,jdbcType=DATE},
      </if>
      <if test="positiveDate != null" >
        positive_date = #{positiveDate,jdbcType=DATE},
      </if>
      <if test="inCompanyTime != null" >
        in_company_time = #{inCompanyTime,jdbcType=TINYINT},
      </if>
      <if test="firstjobDate != null" >
        firstjob_date = #{firstjobDate,jdbcType=DATE},
      </if>
      <if test="birthDate != null" >
        birth_date = #{birthDate,jdbcType=DATE},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="certType != null" >
        cert_type = #{certType,jdbcType=TINYINT},
      </if>
      <if test="certId != null" >
        cert_id = #{certId,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="salaryCard != null" >
        salary_card = #{salaryCard,jdbcType=VARCHAR},
      </if>
      <if test="marital != null" >
        marital = #{marital,jdbcType=TINYINT},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="studyAbroad != null" >
        study_abroad = #{studyAbroad,jdbcType=TINYINT},
      </if>
      <if test="workLocation != null" >
        work_location = #{workLocation,jdbcType=VARCHAR},
      </if>
      <if test="payrollLocation != null" >
        payroll_location = #{payrollLocation,jdbcType=VARCHAR},
      </if>
      <if test="registerLocation != null" >
        register_location = #{registerLocation,jdbcType=VARCHAR},
      </if>
      <if test="socialSecurityLocation != null" >
        social_security_location = #{socialSecurityLocation,jdbcType=VARCHAR},
      </if>
      <if test="registerType != null" >
        register_type = #{registerType,jdbcType=TINYINT},
      </if>
      <if test="birthPlace != null" >
        birth_place = #{birthPlace,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null" >
        nationality = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="contactAddress != null" >
        contact_address = #{contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="familyAddress != null" >
        family_address = #{familyAddress,jdbcType=VARCHAR},
      </if>
      <if test="postCode != null" >
        post_code = #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="isPayrollFlag != null" >
        is_payroll_flag = #{isPayrollFlag,jdbcType=TINYINT},
      </if>
      <if test="fileLocation != null" >
        file_location = #{fileLocation,jdbcType=VARCHAR},
      </if>
      <if test="isForeign != null" >
        is_foreign = #{isForeign,jdbcType=TINYINT},
      </if>
      <if test="leftDate != null" >
        left_date = #{leftDate,jdbcType=DATE},
      </if>
      <if test="leftCause != null" >
        left_cause = #{leftCause,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        expire_date = #{expireDate,jdbcType=DATE},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyUserId != null" >
        last_modify_user_id = #{lastModifyUserId,jdbcType=BIGINT},
      </if>
      <if test="lastModifyUserName != null" >
        last_modify_user_name = #{lastModifyUserName,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyDate != null" >
        last_modify_date = #{lastModifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="employeeGroup != null" >
        employee_group = #{employeeGroup,jdbcType=VARCHAR},
      </if>
      <if test="team != null" >
        team = #{team,jdbcType=BIGINT},
      </if>
      <if test="isWorkplace != null" >
        is_workplace = #{isWorkplace,jdbcType=TINYINT},
      </if>
      <if test="resume != null" >
        resume = #{resume,jdbcType=VARCHAR},
      </if>
      <if test="subbank != null" >
        subbank = #{subbank,jdbcType=VARCHAR},
      </if>
      <if test="recruit != null" >
        recruit = #{recruit,jdbcType=VARCHAR},
      </if>
      <if test="originPlace != null">
		origin_place = #{originPlace,jdbcType=VARCHAR},
	  </if>
    </set>
    where person_id = #{personId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jabava.pojo.manage.EhrPerson" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 22 13:34:15 CST 2015.
    -->
    update ehr_person
    set company_id = #{companyId,jdbcType=BIGINT},
      organization_id = #{organizationId,jdbcType=BIGINT},
      post_id = #{postId,jdbcType=BIGINT},
      cost_id = #{costId,jdbcType=BIGINT},
      job_number = #{jobNumber,jdbcType=VARCHAR},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      employee_photo = #{employeePhoto,jdbcType=VARCHAR},
      employment_type = #{employmentType,jdbcType=VARCHAR},
      rank_id = #{rankId,jdbcType=BIGINT},
      key_person = #{keyPerson,jdbcType=TINYINT},
      sex = #{sex,jdbcType=TINYINT},
      report_object = #{reportObject,jdbcType=VARCHAR},
      entry_date = #{entryDate,jdbcType=DATE},
      positive_date = #{positiveDate,jdbcType=DATE},
      in_company_time = #{inCompanyTime,jdbcType=TINYINT},
      firstjob_date = #{firstjobDate,jdbcType=DATE},
      birth_date = #{birthDate,jdbcType=DATE},
      age = #{age,jdbcType=INTEGER},
      cert_type = #{certType,jdbcType=TINYINT},
      cert_id = #{certId,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      salary_card = #{salaryCard,jdbcType=VARCHAR},
      marital = #{marital,jdbcType=TINYINT},
      degree = #{degree,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      study_abroad = #{studyAbroad,jdbcType=TINYINT},
      work_location = #{workLocation,jdbcType=VARCHAR},
      payroll_location = #{payrollLocation,jdbcType=VARCHAR},
      register_location = #{registerLocation,jdbcType=VARCHAR},
      social_security_location = #{socialSecurityLocation,jdbcType=VARCHAR},
      register_type = #{registerType,jdbcType=TINYINT},
      birth_place = #{birthPlace,jdbcType=VARCHAR},
      nationality = #{nationality,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      Email = #{email,jdbcType=VARCHAR},
      contact_address = #{contactAddress,jdbcType=VARCHAR},
      family_address = #{familyAddress,jdbcType=VARCHAR},
      post_code = #{postCode,jdbcType=VARCHAR},
      is_payroll_flag = #{isPayrollFlag,jdbcType=TINYINT},
      file_location = #{fileLocation,jdbcType=VARCHAR},
      is_foreign = #{isForeign,jdbcType=TINYINT},
      left_date = #{leftDate,jdbcType=DATE},
      left_cause = #{leftCause,jdbcType=VARCHAR},
      expire_date = #{expireDate,jdbcType=DATE},
      memo = #{memo,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      last_modify_user_id = #{lastModifyUserId,jdbcType=BIGINT},
      last_modify_user_name = #{lastModifyUserName,jdbcType=VARCHAR},
      last_modify_date = #{lastModifyDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      employee_group = #{employeeGroup,jdbcType=VARCHAR},
      team = #{team,jdbcType=BIGINT},
      is_workplace = #{isWorkplace,jdbcType=TINYINT},
      resume = #{resume,jdbcType=VARCHAR},
      subbank = #{subbank,jdbcType=VARCHAR},
      recruit = #{recruit,jdbcType=VARCHAR}
    where person_id = #{personId,jdbcType=BIGINT}
  </update>
   <select id="selectByCompanyId" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	    select 
	    	ep.*,eo.organization_name org,ebd.base_data_name post
	    from ehr_person ep
	    left join ehr_organization eo on ep.organization_id=eo.organization_id
	    left join ehr_base_data ebd on ep.post_id=ebd.base_data_id
	    where ep.company_id = #{companyId,jdbcType=BIGINT} and ep.is_deleted=0
	    <if test="search != null and search != ''">
	  		and CONCAT(ep.person_id,ep.job_number,ep.employee_name,ep.mobile,ep.phone,ep.email,eo.organization_name,ebd.base_data_name) LIKE CONCAT(CONCAT('%', #{search,jdbcType=VARCHAR}), '%')
	  	</if>
   </select>
   
   <select id="selectByOrganizationId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
	    select 
	    	ep.*,eo.organization_name org,ebd.base_data_name post
	    from ehr_person ep
	    left join ehr_organization eo on ep.organization_id=eo.organization_id
	    left join ehr_base_data ebd on ep.post_id=ebd.base_data_id
	    where ep.organization_id = #{organizationId,jdbcType=BIGINT} and ep.is_deleted=0
   </select>
   
   <select id="selectByOrgIdList" resultMap="BaseResultMap" parameterType="java.util.List" >
	    select 
	    	ep.*,eo.organization_name org,ebd.base_data_name post
	    from ehr_person ep
	    left join ehr_organization eo on ep.organization_id=eo.organization_id
	    left join ehr_base_data ebd on ep.post_id=ebd.base_data_id
	    where ep.is_deleted=0 and ep.organization_id in
        <foreach item="item" index="index" collection="list" 
              open="(" separator="," close=")">
              #{item}
        </foreach>
   </select>
   
   <select id="selectAddressPage" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
    	ep.*,eo.organization_name org,ebd.base_data_name post
    from ehr_person ep
    left join ehr_organization eo on ep.organization_id=eo.organization_id
    left join ehr_base_data ebd on ep.post_id=ebd.base_data_id
    where ep.company_id = #{companyId,jdbcType=BIGINT} and ep.is_deleted=0
    <if test="search != null and search != ''">
  		and CONCAT(ep.person_id,ep.job_number,ep.employee_name,ep.mobile,ep.phone,ep.email,eo.organization_name,ebd.base_data_name) LIKE CONCAT(CONCAT('%', #{search,jdbcType=VARCHAR}), '%')
  	</if>
  	order by ${orderBy}
  </select>
  
  	<select id="searchPerson" resultMap="BaseResultMap">
  		select 
  			<include refid="Base_Column_List"/> 
		from 
			ehr_person 
		where 
			company_id=#{companyId,jdbcType=BIGINT} and is_deleted=0
			<if test="distinguish != null and distinguish != ''">
				 and organization_id in (select organization_id from ehr_organization where total_organization_code like CONCAT(CONCAT('%', #{distinguish, jdbcType=VARCHAR}), '%') )
			</if>
			<if test="jobNumber != null and jobNumber != ''">
				and job_number like CONCAT(CONCAT('%', #{jobNumber, jdbcType=VARCHAR}), '%')
			</if>
			<if test="keyPerson != null">
				and key_person=#{keyPerson, jdbcType=TINYINT}
			</if>
			<if test="employeeName != null and employeeName != ''">
				and employee_name like CONCAT(CONCAT('%', #{employeeName, jdbcType=VARCHAR}), '%')
			</if>
			<if test="organizationId != null and organizationId != 0">
				and organization_id in (select organization_id from ehr_organization where total_organization_code like CONCAT(CONCAT('%', #{totalCode, jdbcType=VARCHAR}), '%'))
			</if>
			<if test="workLocation != null and workLocation != '' and workLocation != '全部'">
				and work_location =#{workLocation, jdbcType=VARCHAR}
			</if>
			<if test="payrollLocation != null and payrollLocation != '' and payrollLocation != '全部'">
				and payroll_location =#{payrollLocation, jdbcType=VARCHAR}
			</if>
			<if test="entryDateStart != null and entryDateStart != null">
				and entry_date &gt;=#{entryDateStart, jdbcType=DATE}
			</if>
			<if test="entryDateEnd != null and entryDateEnd != null">
				and entry_date &lt;=#{entryDateEnd, jdbcType=DATE}
			</if>
			<if test="leftDateStart != null and leftDateStart != null">
				and left_date &gt;=#{leftDateStart, jdbcType=DATE}
			</if>
			<if test="leftDateEnd != null and leftDateEnd != null">
				and left_date &lt;=#{leftDateEnd, jdbcType=DATE}
			</if>
			<if test="positiveDateStart != null and positiveDateStart != null">
				and positive_date &gt;=#{positiveDateStart, jdbcType=DATE}
			</if>
			<if test="positiveDateEnd != null and positiveDateEnd != null">
				and positive_date &lt;=#{positiveDateEnd, jdbcType=DATE}
			</if>
			<if test="(expireDateStart != null and expireDateStart != '') or (expireDateEnd != null and expireDateEnd != '')">
				and person_id in (SELECT person_id from (select * from (SELECT * from ehr_contract  ORDER BY contract_end_date desc ) as a group by person_id) as b  where 1=1
				<if test="expireDateStart != null and expireDateStart != ''">
					and contract_end_date &gt;=#{expireDateStart, jdbcType=DATE}
				</if>
				<if test="expireDateEnd != null and expireDateEnd != ''">
					and contract_end_date &lt;=#{expireDateEnd, jdbcType=DATE}
				</if>
				group by person_id)
			</if>
			<if test="status != null and status != 10">
				and status=#{status, jdbcType=TINYINT}
			</if>
			<if test="isPayrollFlag != null and isPayrollFlag != 10">
				and is_payroll_flag =#{isPayrollFlag, jdbcType=TINYINT}
			</if>
			<if test="certificate != null and certificate != ''">
				and person_id in(select person_id from ehr_certificate where certificate_name like CONCAT(CONCAT('%', #{certificate, jdbcType=VARCHAR}), '%')) 
			</if>
			${where}
		order by person_id desc	
  	</select>
  	
  	<select id="searchEhrPersonPage" resultMap="BaseResultMap" parameterType="java.util.Map">
  		select 
  			ep.*,eo.organization_name org,ebd.base_data_name post
		from 
			ehr_person ep
	    left join ehr_organization eo on ep.organization_id=eo.organization_id
	    left join ehr_base_data ebd on ep.post_id=ebd.base_data_id
		where 
			 ep.company_id=#{companyId,jdbcType=BIGINT} and ep.is_deleted=0
			<if test="distinguish != null and distinguish != ''">
				 and ep.organization_id in (select organization_id from ehr_organization where total_organization_code like CONCAT(CONCAT('%', #{distinguish, jdbcType=VARCHAR}), '%') )
			</if>
			<if test="jobNumber != null and jobNumber != ''">
				and ep.job_number like CONCAT(CONCAT('%', #{jobNumber, jdbcType=VARCHAR}), '%')
			</if>
			<if test="keyPerson != null and keyPerson != ''">
				and ep.key_person=#{keyPerson, jdbcType=TINYINT}
			</if>
			<if test="employeeName != null and employeeName != ''">
				and ep.employee_name like CONCAT(CONCAT('%', #{employeeName, jdbcType=VARCHAR}), '%')
			</if>
			<if test="organizationName != null and organizationName != ''">
				and ep.organization_id in (select organization_id from ehr_organization where organization_name like CONCAT(CONCAT('%', #{organizationName, jdbcType=VARCHAR}), '%'))
			</if>
			<if test="workLocation != null and workLocation != ''">
				and ep.work_location =#{workLocation, jdbcType=VARCHAR}
			</if>
			<if test="payrollLocation != null and payrollLocation != ''">
				and ep.payroll_location =#{payrollLocation, jdbcType=VARCHAR}
			</if>
			<if test="entryDateStart != null and entryDateStart != null">
				and entry_date &gt;=#{entryDateStart, jdbcType=DATE}
			</if>
			<if test="entryDateEnd != null and entryDateEnd != null">
				and entry_date &lt;=#{entryDateEnd, jdbcType=DATE}
			</if>
			<if test="leftDateStart != null and leftDateStart != null">
				and left_date &gt;=#{leftDateStart, jdbcType=DATE}
			</if>
			<if test="leftDateEnd != null and leftDateEnd != null">
				and left_date &lt;=#{leftDateEnd, jdbcType=DATE}
			</if>
			<if test="positiveDateStart != null and positiveDateStart != null">
				and positive_date &gt;=#{positiveDateStart, jdbcType=DATE}
			</if>
			<if test="positiveDateEnd != null and positiveDateEnd != null">
				and positive_date &lt;=#{positiveDateEnd, jdbcType=DATE}
			</if>
			<if test="(expireDateStart != null and expireDateStart != '') or (expireDateEnd != null and expireDateEnd != '')">
				and person_id in (SELECT person_id from (select * from (SELECT * from ehr_contract  ORDER BY contract_end_date desc ) as a group by person_id) as b  where 1=1
				<if test="expireDateStart != null and expireDateStart != ''">
					and contract_end_date &gt;=#{expireDateStart, jdbcType=DATE}
				</if>
				<if test="expireDateEnd != null and expireDateEnd != ''">
					and contract_end_date &lt;=#{expireDateEnd, jdbcType=DATE}
				</if>
				group by person_id)
			</if>
			<if test="status != null and status != '' and status != 10">
				and ep.status=#{status, jdbcType=TINYINT}
			</if>
			<if test="isPayrollFlag != null and isPayrollFlag != '' and isPayrollFlag != 10">
				and ep.is_payroll_flag =#{isPayrollFlag, jdbcType=TINYINT}
			</if>
			<if test="certificate != null and certificate != ''">
				and ep.person_id in(select person_id from ehr_certificate where certificate_name like CONCAT(CONCAT('%', #{certificate, jdbcType=VARCHAR}), '%')) 
			</if>
			<if test="search != null and search != ''">
					AND( 
					instr( ep.job_number, #{search,jdbcType=VARCHAR} ) > 0
					OR  ep.employee_name like CONCAT(CONCAT('%', #{search, jdbcType=VARCHAR}), '%')
					OR  eo.organization_name   like CONCAT(CONCAT('%', #{search, jdbcType=VARCHAR}), '%')
					OR  ebd.base_data_name like CONCAT(CONCAT('%', #{search, jdbcType=VARCHAR}), '%')
					OR 	ep.mobile  like CONCAT(CONCAT('%', #{search, jdbcType=VARCHAR}), '%')
					OR  ep.Email  like CONCAT(CONCAT('%', #{search, jdbcType=VARCHAR}), '%')
					)
			</if>
			${where}
		order by ${order} ${according}
  	</select>
  	<select id="searchSalary" resultType="java.lang.Integer">
  	 select count(*) from ehr_salary where 1=1 
		 and person_id = #{personId,jdbcType=BIGINT}
  	</select>
  	
  	
	<select id="searchPositive" resultType="java.lang.Integer" parameterType="java.util.Map">
  		select count(*) from ehr_person where company_id= #{companyId,jdbcType=BIGINT} and is_deleted=0 
  		<if test="distinguish != null and distinguish != ''">
	  		and organization_id in 
	  		(select organization_id from ehr_organization 
	  		where total_organization_code like CONCAT(CONCAT('%', #{distinguish, jdbcType=VARCHAR}), '%')) 
  		</if>
  		and status=0 
  		${where}
		ORDER BY person_id DESC
  	</select>
  	<select id="searchContract" resultType="java.lang.Integer" parameterType="java.util.Map" >
  	  select count(distinct person_id) from ehr_contract
  	  where  
  	  ${dateSql}
  	  and person_id in (select person_id from ehr_person where company_id=#{companyId,jdbcType=BIGINT} and is_deleted=0 
  	  <if test="distinguish != null and distinguish != ''">
  	  and organization_id in (select organization_id from ehr_organization where total_organization_code like CONCAT(CONCAT('%', #{distinguish, jdbcType=VARCHAR}), '%')) 
  	 </if>
  	  and status=0 
  	  ${where}
  	  )
  	</select>
  	<select id="searchBirth" resultType="java.lang.Integer" parameterType="java.util.Map">
  	 select count(*) from ehr_person where company_id = #{companyId,jdbcType=BIGINT} and is_deleted=0 
	 <if test="distinguish != null and distinguish != ''">
	 and organization_id in (select organization_id from ehr_organization where 
	 total_organization_code like CONCAT(CONCAT('%', #{distinguish, jdbcType=VARCHAR}), '%')) 
	 </if>
	 and status=0 
	 ${where}
	 order by person_id desc
  	</select>
  	<select id="searchBirthList"  resultMap="BaseResultMap" parameterType="java.util.Map">
  	 select ep.person_id,ep.job_number,ep.employee_name,ep.mobile,ep.Email, DATE_FORMAT(ep.birth_date, '%Y-%m-%d')birthDate1,eo.organization_name org,ebd.base_data_name post  from ehr_person  ep
     left join ehr_organization eo on ep.organization_id=eo.organization_id
     left join ehr_base_data ebd on ep.post_id=ebd.base_data_id
  	 where ep.company_id = #{companyId,jdbcType=BIGINT} and ep.is_deleted=0
  	 <if test="distinguish != null and distinguish != ''">
	 	and ep.organization_id in (select organization_id from ehr_organization where total_organization_code like CONCAT(CONCAT('%', #{distinguish, jdbcType=VARCHAR}), '%'))
	 </if> 
	 and ep.status=0 
	 ${where}
	 order by ep.person_id desc
  	</select>
  	<select id="searchPositiveList" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select ep.person_id,ep.job_number,ep.employee_name,ep.mobile,ep.Email, DATE_FORMAT(ep.positive_date, '%Y-%m-%d')positiveDate1,eo.organization_name org,ebd.base_data_name post from ehr_person ep 
  	left join ehr_organization eo on ep.organization_id=eo.organization_id
    left join ehr_base_data ebd on ep.post_id=ebd.base_data_id
  	where ep.company_id= #{companyId,jdbcType=BIGINT} and ep.is_deleted=0 
  	<if test="distinguish != null and distinguish != ''">
	and ep.organization_id in 
	(select organization_id from ehr_organization where total_organization_code like CONCAT(CONCAT('%', #{distinguish, jdbcType=VARCHAR}), '%')) 
	</if>
	and ep.status=0 
	${where}
	ORDER BY
	ep.person_id DESC
  	</select>
  	
  	
  	<update id="deletePerson" parameterType="java.lang.Long">
  		update ehr_person set is_deleted=#{personId,jdbcType=INTEGER} where person_id = #{personId,jdbcType=BIGINT}
  	</update>
  	
  	<select id="userBusinessPower" resultType="com.jabava.pojo.manage.EhrUserBusinessPower">
  		select 
  			user_person_power_id as userPersonPowerId,
			user_id as userId,
			field_id as fieldId,
			seq_no as seqNo,
			field_type as fieldType,
			operate_type as operateType,
			field_value as fieldValue,
			function_point_code as functionPointCode
  		from 
  			ehr_user_business_power 
  		where 
  			user_id=#{userId, jdbcType=BIGINT}
			and function_point_code=#{functionId, jdbcType=INTEGER} 
		order by seq_no
  	</select>
  	<select id="getPersonField" resultType="com.jabava.pojo.manage.EhrPersonField">
  		select 
  			field_id as fieldId,
  			field_name as fieldName,
  			field_desc as fieldDesc,
  			field_type as fieldType,
  			relate_sql as relateSql 
		from 
			ehr_person_field 
		where field_id=#{id, jdbcType=INTEGER}
  	</select>
  	<select id="getPowerValue" resultType="com.jabava.pojo.manage.EhrUserPersonPowerValue">
  		select 
			user_person_power_value as userPersonPowerValue,
			user_person_power_id as userPersonPowerId,
			field_id as fieldId, 
			field_key as fieldKey,
			field_value as fieldValue
		from 
			ehr_user_person_power_value 
		where user_person_power_id=#{id, jdbcType=BIGINT}
  	</select>
  	
  
  	<select id="searchBaseData" resultType="com.jabava.pojo.manage.EhrBaseData" parameterType="java.lang.Long">
  		select base_data_id as baseDataId,base_data_name as baseDataName from ehr_base_data where base_data_type = 5
  	</select>
	
	<select id="getPersonByMobile" resultMap="BaseResultMap" parameterType="com.jabava.pojo.manage.EhrPerson">
  		select <include refid="Base_Column_List"/> from ehr_person where mobile=#{mobile, jdbcType=VARCHAR} and is_deleted=0
  	</select>
  	
  	<select id="getUserId" resultType="java.lang.Long">
  		select user_id from ehr_user_person where person_id=#{personId, jdbcType=BIGINT}
  	</select>
  	
  	<insert id="insertUserPerson" parameterType="java.lang.Long">
  		insert into ehr_user_person(user_id,person_id) values(#{userId, jdbcType=BIGINT},#{personId, jdbcType=BIGINT})
  	</insert>
  	
  	<insert id="insertRoleUser" parameterType="java.lang.Long">
  		insert into ehr_role_user(user_id,role_id) values(#{userId, jdbcType=BIGINT},2)
  	</insert>
  	
  	<select id="getAllPersonCertId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select person_id, cert_id from ehr_person where company_id=#{companyId,jdbcType=BIGINT}
	</select>
	
	<select id="selectAllPerson" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ehr_person
    where company_id=#{companyId,jdbcType=BIGINT} and is_deleted = 0
  </select>
  <!-- 根据员工名和公司ID查询员工 -->
  <select id="searchPersonByEmployeeNameAndCompanyId" resultMap="BaseResultMap" parameterType="com.jabava.pojo.manage.EhrPerson" >
     select 
    <include refid="Base_Column_List" />
    from ehr_person
    where is_deleted = 0  and company_id=#{companyId,jdbcType=BIGINT} and employee_name=#{employeeName,jdbcType=VARCHAR}
  </select>
   <update id="isDeletePerson" parameterType="java.lang.Long" >
  	  update ehr_person set is_deleted = #{isDeleted,jdbcType=BIGINT} where person_id=#{personId,jdbcType=BIGINT}
  </update>
  	
	<select id="getById" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from ehr_person where person_id = #{personId,jdbcType=BIGINT} and is_deleted=0
	</select>
	
	<select id="searchPersonByJobNumber" resultMap="BaseResultMap">
		select * from ehr_person
    	where is_deleted = 0 and company_id=#{companyId,jdbcType=BIGINT} and job_number=#{jobNumber,jdbcType=VARCHAR}
	</select>
</mapper>