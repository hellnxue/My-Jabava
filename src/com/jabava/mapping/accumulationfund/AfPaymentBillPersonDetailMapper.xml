<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jabava.dao.accumulationfund.AfPaymentBillPersonDetailMapper" >
  <resultMap id="BaseResultMap" type="com.jabava.pojo.accumulationfund.AfPaymentBillPersonDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="af_payment_bill_person_detail_id" property="afPaymentBillPersonDetailId" jdbcType="BIGINT" />
    <result column="af_payment_bill_person_id" property="afPaymentBillPersonId" jdbcType="BIGINT" />
    <result column="sb_group_detail_id" property="sbGroupDetailId" jdbcType="BIGINT" />
    <result column="base_e" property="baseE" jdbcType="DECIMAL" />
    <result column="ratio_e" property="ratioE" jdbcType="DECIMAL" />
    <result column="amount_e" property="amountE" jdbcType="DECIMAL" />
    <result column="base_p" property="baseP" jdbcType="DECIMAL" />
    <result column="ratio_p" property="ratioP" jdbcType="DECIMAL" />
    <result column="amount_p" property="amountP" jdbcType="DECIMAL" />
    <result column="bj_month_start" property="bjMonthStart" jdbcType="VARCHAR" />
    <result column="bj_month_end" property="bjMonthEnd" jdbcType="VARCHAR" />
    <result column="bj_month_num" property="bjMonthNum" jdbcType="INTEGER" />
    <result column="bj_base_e" property="bjBaseE" jdbcType="DECIMAL" />
    <result column="bj_ratio_e" property="bjRatioE" jdbcType="DECIMAL" />
    <result column="bj_amount_e" property="bjAmountE" jdbcType="DECIMAL" />
    <result column="bj_base_p" property="bjBaseP" jdbcType="DECIMAL" />
    <result column="bj_ratio_p" property="bjRatioP" jdbcType="DECIMAL" />
    <result column="bj_amount_p" property="bjAmountP" jdbcType="DECIMAL" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    af_payment_bill_person_detail_id, af_payment_bill_person_id, sb_group_detail_id, 
    base_e, ratio_e, amount_e, base_p, ratio_p, amount_p, bj_month_start, bj_month_end, 
    bj_month_num, bj_base_e, bj_ratio_e, bj_amount_e, bj_base_p, bj_ratio_p, bj_amount_p, 
    create_user_id, create_date, update_user_id, update_date, is_deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from af_payment_bill_person_detail
    where af_payment_bill_person_detail_id = #{afPaymentBillPersonDetailId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from af_payment_bill_person_detail
    where af_payment_bill_person_detail_id = #{afPaymentBillPersonDetailId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jabava.pojo.accumulationfund.AfPaymentBillPersonDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into af_payment_bill_person_detail (af_payment_bill_person_detail_id, af_payment_bill_person_id, 
      sb_group_detail_id, base_e, ratio_e, 
      amount_e, base_p, ratio_p, 
      amount_p, bj_month_start, bj_month_end, 
      bj_month_num, bj_base_e, bj_ratio_e, 
      bj_amount_e, bj_base_p, bj_ratio_p, 
      bj_amount_p, create_user_id, create_date, 
      update_user_id, update_date, is_deleted
      )
    values (#{afPaymentBillPersonDetailId,jdbcType=BIGINT}, #{afPaymentBillPersonId,jdbcType=BIGINT}, 
      #{sbGroupDetailId,jdbcType=BIGINT}, #{baseE,jdbcType=DECIMAL}, #{ratioE,jdbcType=DECIMAL}, 
      #{amountE,jdbcType=DECIMAL}, #{baseP,jdbcType=DECIMAL}, #{ratioP,jdbcType=DECIMAL}, 
      #{amountP,jdbcType=DECIMAL}, #{bjMonthStart,jdbcType=VARCHAR}, #{bjMonthEnd,jdbcType=VARCHAR}, 
      #{bjMonthNum,jdbcType=INTEGER}, #{bjBaseE,jdbcType=DECIMAL}, #{bjRatioE,jdbcType=DECIMAL}, 
      #{bjAmountE,jdbcType=DECIMAL}, #{bjBaseP,jdbcType=DECIMAL}, #{bjRatioP,jdbcType=DECIMAL}, 
      #{bjAmountP,jdbcType=DECIMAL}, #{createUserId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=BIGINT}, #{updateDate,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jabava.pojo.accumulationfund.AfPaymentBillPersonDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into af_payment_bill_person_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="afPaymentBillPersonDetailId != null" >
        af_payment_bill_person_detail_id,
      </if>
      <if test="afPaymentBillPersonId != null" >
        af_payment_bill_person_id,
      </if>
      <if test="sbGroupDetailId != null" >
        sb_group_detail_id,
      </if>
      <if test="baseE != null" >
        base_e,
      </if>
      <if test="ratioE != null" >
        ratio_e,
      </if>
      <if test="amountE != null" >
        amount_e,
      </if>
      <if test="baseP != null" >
        base_p,
      </if>
      <if test="ratioP != null" >
        ratio_p,
      </if>
      <if test="amountP != null" >
        amount_p,
      </if>
      <if test="bjMonthStart != null" >
        bj_month_start,
      </if>
      <if test="bjMonthEnd != null" >
        bj_month_end,
      </if>
      <if test="bjMonthNum != null" >
        bj_month_num,
      </if>
      <if test="bjBaseE != null" >
        bj_base_e,
      </if>
      <if test="bjRatioE != null" >
        bj_ratio_e,
      </if>
      <if test="bjAmountE != null" >
        bj_amount_e,
      </if>
      <if test="bjBaseP != null" >
        bj_base_p,
      </if>
      <if test="bjRatioP != null" >
        bj_ratio_p,
      </if>
      <if test="bjAmountP != null" >
        bj_amount_p,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="afPaymentBillPersonDetailId != null" >
        #{afPaymentBillPersonDetailId,jdbcType=BIGINT},
      </if>
      <if test="afPaymentBillPersonId != null" >
        #{afPaymentBillPersonId,jdbcType=BIGINT},
      </if>
      <if test="sbGroupDetailId != null" >
        #{sbGroupDetailId,jdbcType=BIGINT},
      </if>
      <if test="baseE != null" >
        #{baseE,jdbcType=DECIMAL},
      </if>
      <if test="ratioE != null" >
        #{ratioE,jdbcType=DECIMAL},
      </if>
      <if test="amountE != null" >
        #{amountE,jdbcType=DECIMAL},
      </if>
      <if test="baseP != null" >
        #{baseP,jdbcType=DECIMAL},
      </if>
      <if test="ratioP != null" >
        #{ratioP,jdbcType=DECIMAL},
      </if>
      <if test="amountP != null" >
        #{amountP,jdbcType=DECIMAL},
      </if>
      <if test="bjMonthStart != null" >
        #{bjMonthStart,jdbcType=VARCHAR},
      </if>
      <if test="bjMonthEnd != null" >
        #{bjMonthEnd,jdbcType=VARCHAR},
      </if>
      <if test="bjMonthNum != null" >
        #{bjMonthNum,jdbcType=INTEGER},
      </if>
      <if test="bjBaseE != null" >
        #{bjBaseE,jdbcType=DECIMAL},
      </if>
      <if test="bjRatioE != null" >
        #{bjRatioE,jdbcType=DECIMAL},
      </if>
      <if test="bjAmountE != null" >
        #{bjAmountE,jdbcType=DECIMAL},
      </if>
      <if test="bjBaseP != null" >
        #{bjBaseP,jdbcType=DECIMAL},
      </if>
      <if test="bjRatioP != null" >
        #{bjRatioP,jdbcType=DECIMAL},
      </if>
      <if test="bjAmountP != null" >
        #{bjAmountP,jdbcType=DECIMAL},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jabava.pojo.accumulationfund.AfPaymentBillPersonDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update af_payment_bill_person_detail
    <set >
      <if test="afPaymentBillPersonId != null" >
        af_payment_bill_person_id = #{afPaymentBillPersonId,jdbcType=BIGINT},
      </if>
      <if test="sbGroupDetailId != null" >
        sb_group_detail_id = #{sbGroupDetailId,jdbcType=BIGINT},
      </if>
      <if test="baseE != null" >
        base_e = #{baseE,jdbcType=DECIMAL},
      </if>
      <if test="ratioE != null" >
        ratio_e = #{ratioE,jdbcType=DECIMAL},
      </if>
      <if test="amountE != null" >
        amount_e = #{amountE,jdbcType=DECIMAL},
      </if>
      <if test="baseP != null" >
        base_p = #{baseP,jdbcType=DECIMAL},
      </if>
      <if test="ratioP != null" >
        ratio_p = #{ratioP,jdbcType=DECIMAL},
      </if>
      <if test="amountP != null" >
        amount_p = #{amountP,jdbcType=DECIMAL},
      </if>
      <if test="bjMonthStart != null" >
        bj_month_start = #{bjMonthStart,jdbcType=VARCHAR},
      </if>
      <if test="bjMonthEnd != null" >
        bj_month_end = #{bjMonthEnd,jdbcType=VARCHAR},
      </if>
      <if test="bjMonthNum != null" >
        bj_month_num = #{bjMonthNum,jdbcType=INTEGER},
      </if>
      <if test="bjBaseE != null" >
        bj_base_e = #{bjBaseE,jdbcType=DECIMAL},
      </if>
      <if test="bjRatioE != null" >
        bj_ratio_e = #{bjRatioE,jdbcType=DECIMAL},
      </if>
      <if test="bjAmountE != null" >
        bj_amount_e = #{bjAmountE,jdbcType=DECIMAL},
      </if>
      <if test="bjBaseP != null" >
        bj_base_p = #{bjBaseP,jdbcType=DECIMAL},
      </if>
      <if test="bjRatioP != null" >
        bj_ratio_p = #{bjRatioP,jdbcType=DECIMAL},
      </if>
      <if test="bjAmountP != null" >
        bj_amount_p = #{bjAmountP,jdbcType=DECIMAL},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where af_payment_bill_person_detail_id = #{afPaymentBillPersonDetailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jabava.pojo.accumulationfund.AfPaymentBillPersonDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update af_payment_bill_person_detail
    set af_payment_bill_person_id = #{afPaymentBillPersonId,jdbcType=BIGINT},
      sb_group_detail_id = #{sbGroupDetailId,jdbcType=BIGINT},
      base_e = #{baseE,jdbcType=DECIMAL},
      ratio_e = #{ratioE,jdbcType=DECIMAL},
      amount_e = #{amountE,jdbcType=DECIMAL},
      base_p = #{baseP,jdbcType=DECIMAL},
      ratio_p = #{ratioP,jdbcType=DECIMAL},
      amount_p = #{amountP,jdbcType=DECIMAL},
      bj_month_start = #{bjMonthStart,jdbcType=VARCHAR},
      bj_month_end = #{bjMonthEnd,jdbcType=VARCHAR},
      bj_month_num = #{bjMonthNum,jdbcType=INTEGER},
      bj_base_e = #{bjBaseE,jdbcType=DECIMAL},
      bj_ratio_e = #{bjRatioE,jdbcType=DECIMAL},
      bj_amount_e = #{bjAmountE,jdbcType=DECIMAL},
      bj_base_p = #{bjBaseP,jdbcType=DECIMAL},
      bj_ratio_p = #{bjRatioP,jdbcType=DECIMAL},
      bj_amount_p = #{bjAmountP,jdbcType=DECIMAL},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where af_payment_bill_person_detail_id = #{afPaymentBillPersonDetailId,jdbcType=BIGINT}
  </update>
  
  <!-- 全部 -->
  <select id="listGroupDetail" resultType="java.util.HashMap">
  	select distinct bpd.sb_group_detail_id, gd.prod_id, gd.prod_name 
  	from af_payment_bill_person_detail bpd 
  		left join sb_group_detail gd on bpd.sb_group_detail_id=gd.id
  		left join af_payment_bill_person bp on bp.af_payment_bill_person_id=bpd.af_payment_bill_person_id
  	where bp.af_payment_bill_id=#{afPaymentBillId,jdbcType=BIGINT}
  		${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("bp.person_id")}
  </select>
  <select id="selectByBillPersonId" resultType="java.util.HashMap">
  	select bpd.*, gd.prod_id, gd.prod_name 
  	from af_payment_bill_person_detail bpd 
  		left join sb_group_detail gd on bpd.sb_group_detail_id=gd.id
  	where bpd.af_payment_bill_person_id=#{afPaymentBillPersonId,jdbcType=BIGINT}
  </select>
  
  <!-- 增员 -->
  <select id="listGroupDetailZy" resultType="java.util.HashMap">
  	select distinct bpd.sb_group_detail_id, gd.prod_id, gd.prod_name 
  	from af_payment_bill_person_detail bpd 
  		left join sb_group_detail gd on bpd.sb_group_detail_id=gd.id
		left join af_payment_bill_person bp ON bpd.af_payment_bill_person_id=bp.af_payment_bill_person_id
		LEFT JOIN af_payment_bill b ON bp.af_payment_bill_id=b.af_payment_bill_id
  	where b.af_payment_bill_id=#{afPaymentBillId,jdbcType=BIGINT}
  	 <if test="lastSsPaymentBillId != null" >
  		and bp.person_id not in (select person_id from af_payment_bill_person 
  			where af_payment_bill_id=#{lastSsPaymentBillId,jdbcType=BIGINT}
  			${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("person_id")})
  	</if>
  	${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("bp.person_id")}
  </select>
  <select id="selectZyByBillId" resultType="java.util.HashMap">
  	select bpd.*,bp.accumulation_fund_account, gd.prod_id, gd.prod_name, p.person_id, p.employee_name person_name,
  		bp.hj_amount bp_hj_amount, bp.hj_amount_e bp_hj_amount_e, bp.hj_amount_p bp_hj_amount_p,
  		bp.bj_amount bp_bj_amount, bp.bj_amount_e bp_bj_amount_e, bp.bj_amount_p bp_bj_amount_p 
  	from af_payment_bill_person_detail bpd 
  		left join sb_group_detail gd on bpd.sb_group_detail_id=gd.id
  		left join af_payment_bill_person bp on bpd.af_payment_bill_person_id=bp.af_payment_bill_person_id
		LEFT JOIN af_payment_bill b ON bp.af_payment_bill_id=b.af_payment_bill_id
  		left join ehr_person p on bp.person_id=p.person_id 
  	where b.af_payment_bill_id=#{afPaymentBillId,jdbcType=BIGINT}
  	 <if test="lastSsPaymentBillId != null" >
  		and bp.person_id not in (select person_id from af_payment_bill_person 
  			where af_payment_bill_id=#{lastSsPaymentBillId,jdbcType=BIGINT}
  			${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("person_id")})
  	</if>
  	${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("bp.person_id")}
  </select>
  
  <!-- 减员 -->
  <select id="listGroupDetailJy" resultType="java.util.HashMap">
  	select distinct bpd.sb_group_detail_id, gd.prod_id, gd.prod_name 
  	from af_payment_bill_person_detail bpd 
  		left join sb_group_detail gd on bpd.sb_group_detail_id=gd.id
		left join af_payment_bill_person bp ON bpd.af_payment_bill_person_id=bp.af_payment_bill_person_id
		LEFT JOIN af_payment_bill b ON bp.af_payment_bill_id=b.af_payment_bill_id
  	where b.af_payment_bill_id=#{lastSsPaymentBillId,jdbcType=BIGINT}
  		and bp.person_id not in (select person_id from af_payment_bill_person 
  			where af_payment_bill_id=#{afPaymentBillId,jdbcType=BIGINT}
  			${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("person_id")})
  		${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("bp.person_id")}
  </select>
  <select id="selectJyByBillId" resultType="java.util.HashMap">
  	select bpd.*,bp.accumulation_fund_account, gd.prod_id, gd.prod_name, p.person_id, p.employee_name person_name,
  		bp.hj_amount bp_hj_amount, bp.hj_amount_e bp_hj_amount_e, bp.hj_amount_p bp_hj_amount_p,
  		bp.bj_amount bp_bj_amount, bp.bj_amount_e bp_bj_amount_e, bp.bj_amount_p bp_bj_amount_p 
  	from af_payment_bill_person_detail bpd 
  		left join sb_group_detail gd on bpd.sb_group_detail_id=gd.id
  		left join af_payment_bill_person bp on bpd.af_payment_bill_person_id=bp.af_payment_bill_person_id
		LEFT JOIN af_payment_bill b ON bp.af_payment_bill_id=b.af_payment_bill_id
  		left join ehr_person p on bp.person_id=p.person_id 
  	where b.af_payment_bill_id=#{lastSsPaymentBillId,jdbcType=BIGINT}
  		and bp.person_id not in (select person_id from af_payment_bill_person 
  			where af_payment_bill_id=#{afPaymentBillId,jdbcType=BIGINT}
  			${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("person_id")})
  		${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("bp.person_id")}
  </select>
  
  <!-- 调基 -->
  <select id="listGroupDetailTj" resultType="java.util.HashMap">
  	select distinct o.sb_group_detail_id, o.prod_id, o.prod_name 
  	from (select od.*,op.person_id,ogd.prod_id,ogd.prod_name from af_payment_bill_person_detail od 
  				left join af_payment_bill_person op on od.af_payment_bill_person_id=op.af_payment_bill_person_id
  				left join sb_group_detail ogd on od.sb_group_detail_id=ogd.id 
  			where op.af_payment_bill_id=#{lastSsPaymentBillId,jdbcType=BIGINT}
  				${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("op.person_id")}) o,
  		(select nd.*,np.person_id,ngd.prod_id,ngd.prod_name from af_payment_bill_person_detail nd 
  				left join af_payment_bill_person np on nd.af_payment_bill_person_id=np.af_payment_bill_person_id
  				left join sb_group_detail ngd on nd.sb_group_detail_id=ngd.id 
  			where np.af_payment_bill_id=#{afPaymentBillId,jdbcType=BIGINT}
  				${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("np.person_id")}) n 
  	where o.person_id=n.person_id and o.sb_group_detail_id=n.sb_group_detail_id and
  		o.base_e <![CDATA[<>]]> n.base_e
  </select>
  <select id="selectTjByBillId" resultType="java.util.HashMap">
  	select o.base_e base_old,n.base_e base_new, o.person_id,o.accumulation_fund_account,o.prod_id,o.prod_name,o.person_name,
  		o.bp_hj_amount, o.bp_hj_amount_e, o.bp_hj_amount_p,	o.bp_bj_amount, o.bp_bj_amount_e, o.bp_bj_amount_p 
  	from (select od.*,op.accumulation_fund_account,op.person_id,ogd.prod_id,ogd.prod_name,p.employee_name person_name,
  				op.hj_amount bp_hj_amount, op.hj_amount_e bp_hj_amount_e, op.hj_amount_p bp_hj_amount_p,
  				op.bj_amount bp_bj_amount, op.bj_amount_e bp_bj_amount_e, op.bj_amount_p bp_bj_amount_p
  			 from af_payment_bill_person_detail od 
  				left join af_payment_bill_person op on od.af_payment_bill_person_id=op.af_payment_bill_person_id
  				left join sb_group_detail ogd on od.sb_group_detail_id=ogd.id
  				left join ehr_person p on op.person_id=p.person_id 
  			where op.af_payment_bill_id=#{lastSsPaymentBillId,jdbcType=BIGINT}
  				${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("op.person_id")}) o,
  		(select nd.*,np.accumulation_fund_account,np.person_id,ngd.prod_id,ngd.prod_name,
  				np.hj_amount bp_hj_amount, np.hj_amount_e bp_hj_amount_e, np.hj_amount_p bp_hj_amount_p,
  				np.bj_amount bp_bj_amount, np.bj_amount_e bp_bj_amount_e, np.bj_amount_p bp_bj_amount_p 
  			from af_payment_bill_person_detail nd 
  				left join af_payment_bill_person np on nd.af_payment_bill_person_id=np.af_payment_bill_person_id
  				left join sb_group_detail ngd on nd.sb_group_detail_id=ngd.id
  				left join ehr_person p on np.person_id=p.person_id 
  			where np.af_payment_bill_id=#{afPaymentBillId,jdbcType=BIGINT}
  				${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("np.person_id")}) n 
  	where o.person_id=n.person_id and o.sb_group_detail_id=n.sb_group_detail_id and
  		o.base_e <![CDATA[<>]]> n.base_e
  </select>
  
  <!-- 补缴 -->
  <select id="listGroupDetailBj" resultType="java.util.HashMap">
  	select distinct bpd.sb_group_detail_id, gd.prod_id, gd.prod_name 
  	from af_payment_bill_person_detail bpd 
  		left join sb_group_detail gd on bpd.sb_group_detail_id=gd.id
  		left join af_payment_bill_person bp on bpd.af_payment_bill_person_id=bp.af_payment_bill_person_id
  	where bp.af_payment_bill_id=#{afPaymentBillId,jdbcType=BIGINT}
  		and (bpd.bj_amount_e > 0 or bpd.bj_amount_p > 0)
  		${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("bp.person_id")}
  </select>
  <select id="selectBjByBillId" resultType="java.util.HashMap">
  	select bpd.*,bp.accumulation_fund_account, gd.prod_id, gd.prod_name, p.person_id, p.employee_name person_name,
  		bp.hj_amount bp_hj_amount, bp.hj_amount_e bp_hj_amount_e, bp.hj_amount_p bp_hj_amount_p,
  		bp.bj_amount bp_bj_amount, bp.bj_amount_e bp_bj_amount_e, bp.bj_amount_p bp_bj_amount_p 
  	from af_payment_bill_person_detail bpd 
  		left join sb_group_detail gd on bpd.sb_group_detail_id=gd.id
  		left join af_payment_bill_person bp on bpd.af_payment_bill_person_id=bp.af_payment_bill_person_id
  		left join ehr_person p on bp.person_id=p.person_id 
  	where bp.af_payment_bill_id=#{afPaymentBillId,jdbcType=BIGINT}
  		and (bpd.bj_amount_e > 0 or bpd.bj_amount_p > 0)
  		${@com.jabava.utils.privilege.AuthorisedPersonUtil@getUserAuthorisedPersonList("bp.person_id")}
  </select>
  
  <!-- 员工缴费明细标题 -->
  <select id="listGroupDetailByPerson" resultType="java.util.HashMap">
  	select distinct bpd.sb_group_detail_id, gd.prod_id, gd.prod_name 
  	from af_payment_bill_person_detail bpd 
  		left join sb_group_detail gd on bpd.sb_group_detail_id=gd.id
  		left join af_payment_bill_person bp on bp.af_payment_bill_person_id=bpd.af_payment_bill_person_id
  		left join af_payment_bill b on bp.af_payment_bill_id=b.af_payment_bill_id
  	where bp.person_id=#{personId,jdbcType=BIGINT} and b.status <![CDATA[<>]]> 3
      <if test="startMonth != null and startMonth != ''" >
        and b.month <![CDATA[>=]]> #{startMonth}
      </if>
      <if test="endMonth != null and endMonth != ''" >
        and b.month <![CDATA[<=]]> #{endMonth}
      </if>
  </select>
  
  <select id="listPersonDetail" resultType="java.util.HashMap">
  	SELECT sgd.prod_name prodName, pbpd.base_e companyBase, pbpd.base_p individualBase,
		pbpd.ratio_e companyRatio, pbpd.ratio_p individualRatio,
		pbpd.amount_e companySum, pbpd.amount_p individualSum
	FROM af_payment_bill_person_detail pbpd
	LEFT JOIN sb_group_detail sgd ON pbpd.sb_group_detail_id=sgd.id
	WHERE af_payment_bill_person_id=#{afPaymentBillPersonId,jdbcType=BIGINT}
  </select>
</mapper>