package com.jabava.dao.socialsecurity;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.jabava.pojo.socialsecurity.EhrPersonSecurityProfile;

public interface EhrPersonSecurityProfileMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_person_security_profile
     *
     * @mbggenerated Fri Apr 22 11:31:35 CST 2016
     */
    int deleteByPrimaryKey(Long profileId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_person_security_profile
     *
     * @mbggenerated Fri Apr 22 11:31:35 CST 2016
     */
    int insert(EhrPersonSecurityProfile record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_person_security_profile
     *
     * @mbggenerated Fri Apr 22 11:31:35 CST 2016
     */
    int insertSelective(EhrPersonSecurityProfile record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_person_security_profile
     *
     * @mbggenerated Fri Apr 22 11:31:35 CST 2016
     */
    EhrPersonSecurityProfile selectByPrimaryKey(Long profileId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_person_security_profile
     *
     * @mbggenerated Fri Apr 22 11:31:35 CST 2016
     */
    int updateByPrimaryKeySelective(EhrPersonSecurityProfile record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_person_security_profile
     *
     * @mbggenerated Fri Apr 22 11:31:35 CST 2016
     */
    int updateByPrimaryKey(EhrPersonSecurityProfile record);

	/**
    * 依据企业代码查询企业下所有在缴状态的员工社保档案
    * @param companyId 企业代码 
    * @return
    */
    List<EhrPersonSecurityProfile> getSecurityProfileByCompanyId(@Param("companyId")Long companyId,@Param("securityType")Long securityType);
    
     /**
     * 依据企业社保账户查询公司下所有在缴状态用户
     * @param companyId 企业代码 
     * @return
     */
     List<EhrPersonSecurityProfile> getSecurityProfileByAccount(@Param("securityAccount")Long securityAccount,@Param("securityType")Long securityType);
     
     /**
      * 分页查询员工社保档案列表
      * @param map
      * @return
      */
     List <Map<String,Object>> getSecurityDetailInfoPage(Map <String,Object> map);
     
     /**
      * 依据员工代码查询社保档案
      * @param personId
      * @return
      */
     EhrPersonSecurityProfile getProfileIdByPerson(Long personId);
     
     /**
      * 更新社保档案状态
      */
     public int activateSecurity();
     
     /**
      * 更新社保档案状态
      */
     public int inactivateSecurity();
     
     /**
      * 更新公积金档案状态
      */
     public int activateGongjijin();
     
     /**
      * 更新公积金档案状态
      */
     public int inactivateGongjijin();
     
     /**
      * 查询员工可用的社保账号列表 
      * @param personId
      * @return
      */
     public List <Map <String,Object>> getAllProductsByPersonId(Long personId);
     /**
 	 * 查询社保或者公积金账户为在缴状态的社保档案
 	 * securityOrgAccount 可以为空
 	 * gongjijinOrgAccount  可以为空
 	 * <pre>
 	 * @author steven.chen
 	 * @date 2016年4月29日 上午11:09:35 
 	 * </pre>
 	 *
 	 * @param securityOrgAccount
 	 * @param gongjijinOrgAccount
 	 * @return
 	 */
     public List<EhrPersonSecurityProfile> getSecurityProfileByOrgAccount(EhrPersonSecurityProfile record);
     
     /**
      * 查询社保参数总数
      * @return
      */
     public Long selectProfileTotalCount(@Param("companyId")Long companyId);
     
     /**
      * 查询员工当月报表生成记录总数
      * @param personId
      * @param month
      * @return
      */
     public Long getGeneratedReportCount(@Param("personId")Long personId,@Param("month")String month);
   //--------------------------myself----------------------------------------
     /**
      * 根据companyId查询员工社保档案表里的所有personId
      * @param companyId
      * @return
      */
     public List<Map<String,Object>> getAllPersonIdByCompanyId(Long companyId);
     
     /**
      * 根据personId集合查询修改的profile_id
      * @param list
      * @return
      */
     public List<EhrPersonSecurityProfile> selectprofileIdListByPersonIdList(List<Long> list);
     
     /**
      * 批量插入
      */
     public int  insertBachForSecurityProfile(List<EhrPersonSecurityProfile> list);
     
     /**
      * 批量修改
      */
     public int  updateBachForSecurityProfile(List<EhrPersonSecurityProfile> list);
   //--------------------------myself----------------------------------------end
}