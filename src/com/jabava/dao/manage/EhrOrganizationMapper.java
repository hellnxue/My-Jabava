package com.jabava.dao.manage;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.jabava.pojo.manage.EhrOrganization;
import com.jabava.pojo.manage.EhrPerson;

public interface EhrOrganizationMapper {
	
	List<EhrOrganization> selectByCompanyId(Long companyId);
	
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_organization
     *
     * @mbggenerated Tue Dec 22 13:34:15 CST 2015
     */
    int deleteByPrimaryKey(Long organizationId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_organization
     *
     * @mbggenerated Tue Dec 22 13:34:15 CST 2015
     */
    int insert(EhrOrganization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_organization
     *
     * @mbggenerated Tue Dec 22 13:34:15 CST 2015
     */
    int insertSelective(EhrOrganization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_organization
     *
     * @mbggenerated Tue Dec 22 13:34:15 CST 2015
     */
    EhrOrganization selectByPrimaryKey(Long organizationId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_organization
     *
     * @mbggenerated Tue Dec 22 13:34:15 CST 2015
     */
    int updateByPrimaryKeySelective(EhrOrganization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ehr_organization
     *
     * @mbggenerated Tue Dec 22 13:34:15 CST 2015
     */
    int updateByPrimaryKey(EhrOrganization record);
    
    /**
     * 组织机构查询
     * @param organizationCode
     * @param totalOrganizationCode
     * @param organizationName
     * @param organizationLevel
     * @param parentId
     * @param companyId
     * @return
     */
    List<EhrOrganization> selectOrgani(
    		@Param("organizationCode") String organizationCode,
    		@Param("totalOrganizationCode") String totalOrganizationCode,
    		@Param("organizationName") String organizationName,
    		@Param("organizationLevel") Integer organizationLevel,
    		@Param("parentId") Long parentId,
    		@Param("companyId") Long companyId
    		);
    
    /**
     * 
     * @param params
     * companyId,organizationCode,organizationName,organizationLevel,parentId
     * @return
     */
    List<EhrOrganization> searchOrganization(Map<String,Object> params);
    
    /**
     * 查询父组织
     * @return
     */
   EhrOrganization  selectOrganParentName (@Param("organizationId")Long organizationId);
   /**
    * 是否存在子组织 
    * @param parentId
    * @return
    */
   List<EhrOrganization> selectOrganparentId(Long parentId);
   /**
    * 组织下是否存在人员 
    * @param organizationId
    * @return
    */
   List<EhrPerson> selectOrganorganizationId(Long organizationId);
   
   /**
    * 删除组织
    * @param organizationId
    * @return
    */
   int deleteByorganizationId(Long organizationId);
   /**
    * 通过organizationId查询
    * @param organizationId
    * @return
    */
   EhrOrganization selectByorganizationId(Long organizationId);
   
   List<EhrOrganization> selectOrgByName(@Param("companyId") Long companyId,
			@Param("organizationName") String organizationName);
   
   /**
    * 查询子组织
    * @return
    */
  List<EhrOrganization> selectChildren (Long parentId);

  /**
   * 查询组织下人员 
   * @param organizationId
   * @return
   */
  List<EhrPerson> selectOrganizationPerson(Long organizationId);
  
  EhrOrganization findTopOrganization(Long companyId);
   
}